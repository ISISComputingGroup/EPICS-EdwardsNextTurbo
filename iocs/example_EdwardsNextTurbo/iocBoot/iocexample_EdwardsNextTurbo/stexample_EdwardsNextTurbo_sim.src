#!$(INSTALL)/bin/$(ARCH)/example_EdwardsNextTurbo

cd "$(INSTALL)"

# Load binaries on architectures that need to do so.
# VXWORKS_ONLY, LINUX_ONLY and RTEMS_ONLY are macros that resolve
# to a comment symbol on architectures that are not the current
# build architecture, so they can be used liberally to do architecture
# specific things. Alternatively, you can include an architecture
# specific file.
$(VXWORKS_ONLY)ld < bin/$(ARCH)/example_EdwardsNextTurbo.munch

$(LINUX_ONLY)epicsEnvSet(EPICS_CA_REPEATER_PORT,"6065")
$(LINUX_ONLY)epicsEnvSet(EPICS_CA_SERVER_PORT,"6064")

# This drvTS initializer is needed if the IOC has a hardware event system
#TSinit

$(VXWORKS_ONLY)epicsEnvSet("STREAM_PROTOCOL_DIR","$(EDWARDSNEXTTURBO)/data")
$(LINUX_ONLY)epicsEnvSet("STREAM_PROTOCOL_PATH","$(EDWARDSNEXTTURBO)/data")

# Register all support components
dbLoadDatabase("dbd/example_EdwardsNextTurbo.dbd")
example_EdwardsNextTurbo_registerRecordDeviceDriver(pdbbase)

drvAsynIPPortConfigure("turbo1", "localhost:9001", 100, 0, 0)
drvAsynIPPortConfigure("turbo2", "localhost:9002", 100, 0, 0)
#asynSetOption("turbo1", 0, "baud", "9600")
#asynSetOption("turbo1", 0, "parity", "odd")
#asynSetOption("turbo1", 0, "bits", "8")

# Load record instances
#dbLoadRecords("db/<filename>.db","<List of macros, e.g. user=xxx>")
dbLoadRecords("db/example_EdwardsNextTurbo_sim.db")

# Set this to see messages from mySub
#mySubDebug 1

# for debugging...
# errors only
#asynSetTraceMask("turbo1",0,0x01)
# full trace
asynSetTraceMask("turbo1",-1,0x9) 
asynSetTraceIOMask("turbo1",-1,0x2) 

iocInit()

# Start any sequence programs
#seq sncExample,"user=xxx"
